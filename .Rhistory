git
git
debug(mean)
mean(x)
x <- c(1,2,4,5,8)
mean(x)
options(error = recover)
mean(y)
traceback()
library(datasets)
data(iris)
?iris
str(iris)
head(iris)
iris[,"Species"]
head(iris)
iris$Species == "virginica"
v<- iris$Species == "virginica"
v
iris[v]
iris[,v]
iris[,v]
0
iris
isris$"Sepal.Length"
isris$Sepal.Length
head(iris)
iris[,"Sepal.Length"]
iris[v,"Sepal.Length"]
mean(iris[v,"Sepal.Length"])
exit
bye
mean(iris[v,"Sepal.Length"])
head(iris)
iris[,1:4]
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
rowMeans(iris[,1:4])
colMeans(iris[,1:4])
librabry(datasets)
library(datasets)
data(mtcars)
?mtcars
str(mtcars)
head(mtcars)
mtcars
?tapply
tapply(mtcars$mpg,mtcars$cyl,mean)
split(mtcars,mtcars$cyl)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
split(mtcars$mpg,mtcars$cyl)
sapply(split(mtcars$hp,mtcars$cyl),mean)
?abs
sapply(split(mtcars$hp,mtcars$cyl),mean)[,4]
sapply(split(mtcars$hp,mtcars$cyl),mean)[,"4"]
sapply(split(mtcars$hp,mtcars$cyl),mean)[1]
sapply(split(mtcars$hp,mtcars$cyl),mean)
abs(209.21429-82.63636)
debug(ls)
ls()
library(xlsx)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
gasData <- read.xls(fileUrl, sheetIndex=1, colIndex=7:15, rowIndex=18:23)
gasData <- read.xlsx(fileUrl, sheetIndex=1, colIndex=7:15, rowIndex=18:23)
getwd()
setwd("./Downloads/data")
getwd()
download.file(fileUrl,"gasData.xlsx",method="curl")
gasData <- read.xlsx("gasData.xlsx", sheetIndex=1, colIndex=7:15, rowIndex=18:23)
gasData
sum(gasData$Zip*gasData$Ext,na.rm=T)
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, internal=T)
?xmlTreeParse
doc <- xmlTreeParse(fileUrl, useInternalNodes=T)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternalNodes=T)
doc
rn <- xmlRoot(doc)
names(rn)
xmlName(rn)
xmlSApply(rn, "//zipcode", xmlValue)
xpathSApply(doc,"//zipcode",xmlValue)
xpathSApply(doc,"//zipcode",xmlValue) == "21231"
sum(xpathSApply(doc,"//zipcode",xmlValue) == "21231",na.rm=T)
rm(doc,rn,fileUrl)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
?fread
??fread
download.file(fileUrl,"comm.csv",method="curl")
?data.table
library(data.table)
install.packages(data.table)
install.packages("data.table")
library(data.table)
?fread
com <- fread("comm.csv", sep=",", stringsAsFactors=FASLE)
str(com)
com$PWGTP15
com$pwgtp15
DT <- com
DT[,mean(pwgtp15),by=SEX]
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv,stringAsFactors=F)
mydf <- read.csv(path2csv,stringsAsFactors=F)
mydf <- read.csv(path2csv,stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran, -X:Size)
select(cran, -X:size)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_versiob == "3.1.1", country == "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparision
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
getwd()
setwd("..")
getwd()
setwd("/Users/hardeeparora/repos/toto")
ls()
getwd()
th <- fread("totoHistory.csv")
str(th)
head(th)
th <- tbl_df(th)
str(th)
th
submit()
source("test.R")
source("test.R")
source("test.R")
source("test.R")
source("test.R")
source("test.R")
d3 <- source("test.R")
d3
rm(d3)
?write.csv
source("totoHistory.R")
buildResults('24-12-2014')
source("totoHistory.R")
buildResults('24-12-2014')
?write.csv
source("totoHistory.R")
buildResults('24-12-2014')
buildResults('24-12-2014')
th
source("totoHistory.R")
buildResults("24-12-2014")
th <- fread("totoHistory.csv")
th <- tbl_df(th)
th
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex","class"))
submit()
students3
?gather
submit()
?spread
submit()
submit()
extract_numeric("class5")
?mutate
library(dplyr)
?mutate
submit()
extract_numeric(class)
?extract_numeric
submit()
student4
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status="failed")
?rbind_list
rbind_list(passed,failed)
sat
?select
?separate
submit()
?group_by
submit()
th = fread("totoHistory.csv")
th = tbl_df(th)
th
gather(th, num, count, N1:N7, na.rm=TRUE)
th_tidy <- gather(th, numID, numDrawn, N1:N7, na.rm=TRUE) %>% mutate(num = extract_numeric(numID))
th_tidy
th_tidy <- gather(th, numID, numDrawn, N1:N7, na.rm=TRUE) %>% mutate(numID = extract_numeric(numID))
th_tidy
select(th_tidy, numID, numDrawn) %>% filter(Date="1988-01-14")
select(th_tidy, numID, numDrawn) %>% filter(Date=="1988-01-14")
filter(th_tidy, Date=="1988-01-14")
filter(th, Date=="1988-01-14")
write.table(th_tidy,file="totoHistory_tidy.csv",sep=",",row.names=FALSE)
th_tidy <- gather(th, numID, numDrawn, N1:N7, na.rm=TRUE) %>% mutate(numID = extract_numeric(numID)) %>% aggrange(as.Date(Date,format="%Y-%m-%d"),numID)
th_tidy <- gather(th, numID, numDrawn, N1:N7, na.rm=TRUE) %>% mutate(numID = extract_numeric(numID)) %>% arrange(as.Date(Date,format="%Y-%m-%d"),numID)
write.table(th_tidy,file="totoHistory_tidy.csv",sep=",",row.names=FALSE)
source("totoHistory.R")
buildResults("24-12-2014")
filter(th_tidy, numDrawn == 3) %>% arrange(desc(as.Date(Date,format="%Y-%m-%d")))
g <- group_by(th_tidy, numDrawn)
g
select(g,numDrawn) %>% mutate(count=count(numDrawn)) %>% arrange(numDrawn)
select(g,numDrawn)
select(g,numDrawn) %>% mutate(cnt=count(numDrawn))
?count
g <- group_by(th_tidy, as.character(numDrawn))
select(g,numDrawn) %>% mutate(cnt=count(numDrawn))
select(g,numDrawn)
g
g <- group_by(th_tidy, numDrawn= as.character(numDrawn))
g
select(g,numDrawn)
select(g,numDrawn) %>% mutate(cnt=count(numDrawn))
select(g,numDrawn,numID) %>% mutate(cnt=count(numDrawn))
?summarize
summarise(g,count(numDrawn))
g
summarise(g,count(Date))
g <- group_by(th_tidy, numDrawn)
g
summarise(g,count(Date))
str(g)
summarise(g,count(numID))
select(g,numDrawn,Date) %>% mutate(cnt=count(Date))
select(g,numDrawn,Date) %>% mutate(cnt=count(Date))
swirl
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day = today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
now()
update(this_moment, hours = 21, minutes=45, seconds=0)
this_moment <- update(this_moment, hours = 21, minutes=45, seconds=0)
this_moment
?now
nyc <- now(tzone="America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours=17, minutes=34, seconds=0)
depart <- update(depart, hours=17, minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
swirl()
install.packages(RMySQL)
install.packages("RMySQL")
install.packages("ROracle")
install.packages("ROracle")
install.packages("ROracle",type=source)
install.packages("ROracle",type="source")
install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
?dbConnect
install.packages("RMySQL",type="source")
